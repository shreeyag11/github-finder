{"version":3,"sources":["components/layout/spinner.gif","components/layout/NavBar.js","components/users/UserItem.js","components/layout/Spinner.js","components/users/Users.js","components/repos/RepoItem.js","components/repos/Repos.js","components/users/User.js","components/users/Search.js","components/layout/Alert.js","components/pages/About.js","App.js","index.js"],"names":["module","exports","NavBar","icon","title","className","to","defaultProps","UserItem","user","login","avatar_url","html_url","src","alt","style","width","Spinner","spinner","display","margin","userStyle","gridGap","gridTemplateColumns","Users","users","loading","map","key","id","RepoItem","repo","href","name","propType","PropTypes","object","isRequired","Repos","repos","array","User","this","props","getUser","match","params","getUserRepos","company","location","bio","blog","followers","following","public_repos","public_gists","hireable","Component","Search","state","text","onChange","e","setState","target","value","onSubmit","preventDefault","setAlert","searchUser","showClear","clearUser","styleClearBtn","type","placeholder","onClick","Alert","alertBox","msg","About","App","alert","a","axios","get","process","res","data","items","username","setTimeout","exact","path","render","length","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e11856fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.9d10e74c.gif\";","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = ({ icon, title }) => {\r\n    return (\r\n        <nav className=\"navbar bg-primary\">\r\n            <h1>\r\n                <i className={icon} /> {title}\r\n            </h1>\r\n            <ul>\r\n                <li>\r\n                    <Link to='/'>Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/about'>About</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavBar.defaultProps = {\r\n    title: 'Github Finder',\r\n    icon: 'fab fa-github'\r\n};\r\n\r\nNavBar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    icon: PropTypes.string.isRequired\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserItem = ({ user: { login, avatar_url, html_url } }) => {\r\n    return (\r\n        <div className=\"card text-center\">\r\n            <img src={avatar_url} alt=\"\" className=\"round-img\" style={{ width: '60px' }} />\r\n            <h3>{login}</h3>\r\n            <div>\r\n                <Link to={`/user/${login}`} className=\"btn btn-dark btn-sm my-1\">\r\n                    More\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nUserItem.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default UserItem\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nfunction Spinner() {\r\n    return (\r\n        <Fragment>\r\n            <img src={spinner} alt=\"Loading...\" style={{ display: 'block', width: '50px', margin: 'auto' }} />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n\r\n","import React from 'react'\r\nimport UserItem from './UserItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Users = ({ users, loading }) => {\r\n    if (loading) {\r\n        return <Spinner />\r\n    }\r\n    else {\r\n        return (\r\n            <div style={userStyle}>\r\n                {users.map(user => (\r\n                    <UserItem key={user.id} user={user} />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUsers.propTypes = {\r\n    users: PropTypes.array.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n}\r\n\r\nconst userStyle = {\r\n    display: 'grid',\r\n    gridGap: '1rem',\r\n    gridTemplateColumns: 'repeat(3, 1fr)'\r\n}\r\n\r\nexport default Users\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst RepoItem = ({ repo }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <h3>\r\n                <a href={repo.html_url}>{repo.name}</a>\r\n            </h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nRepoItem.propType = {\r\n    repo: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default RepoItem;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport RepoItem from './RepoItem';\r\n\r\nconst Repos = ({ repos }) => {\r\n    return repos.map(repo => <RepoItem repo={repo} key={repo.id} repo={repo} />)\r\n};\r\n\r\nRepos.propType = {\r\n    repos: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Repos;\r\n","import React, { Component, Fragment } from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\nimport Repos from '../repos/Repos';\r\n\r\nclass User extends Component {\r\n    componentDidMount() {\r\n        this.props.getUser(this.props.match.params.login);\r\n        this.props.getUserRepos(this.props.match.params.login);\r\n    }\r\n\r\n    static propTypes = {\r\n        loading: PropTypes.bool,\r\n        user: PropTypes.object.isRequired,\r\n        repos: PropTypes.array.isRequired,\r\n        getUser: PropTypes.func.isRequired,\r\n        getUserRepos: PropTypes.func.isRequired,\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            name,\r\n            company,\r\n            avatar_url,\r\n            location,\r\n            bio,\r\n            blog,\r\n            login,\r\n            html_url,\r\n            followers,\r\n            following,\r\n            public_repos,\r\n            public_gists,\r\n            hireable,\r\n        } = this.props.user;\r\n\r\n        const { loading, repos } = this.props;\r\n\r\n        if (loading) return <Spinner />\r\n        return <Fragment>\r\n            <Link to='/' className=\"btn btn-light\" >Back to Search</Link>\r\n            Hireable: {' '}\r\n            {hireable ? <i className=\"fas fa-check text-success\" /> : <i className=\"fas fa-times-circle text-danger\" />}\r\n            <div className=\"card grid-2\">\r\n                <div className=\"all-center\">\r\n                    <img src={avatar_url} alt=\"\" className='round-img' style={{ width: '150px' }} />\r\n                    <h2>{name}</h2>\r\n                    <p>Location: {location}</p>\r\n                </div>\r\n                <div>\r\n                    {bio && (<Fragment>\r\n                        <h3>Bio</h3>\r\n                        <p>{bio}</p>\r\n                    </Fragment>)}\r\n                    <a href={html_url} className='btn btn-dark my-1'>\r\n                        Visit Github profile\r\n                    </a>\r\n                    <ul>\r\n                        <li>\r\n                            {login && <Fragment>\r\n                                <strong>Username: </strong> {login}\r\n                            </Fragment>}\r\n                        </li>\r\n                        <li>\r\n                            {company && <Fragment>\r\n                                <strong>Company: </strong> {company}\r\n                            </Fragment>}\r\n                        </li>\r\n                        <li>\r\n                            {blog && <Fragment>\r\n                                <strong>Website: </strong> {blog}\r\n                            </Fragment>}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"card text-center\">\r\n                <div className=\"badge badge-primary\">Followers: {followers}</div>\r\n                <div className=\"badge badge-success\">Following: {following}</div>\r\n                <div className=\"badge badge-light\">Public Repos: {public_repos}</div>\r\n                <div className=\"badge badge-dark\">Public Gists: {public_gists}</div>\r\n            </div>\r\n            <Repos repos={repos} />\r\n        </Fragment>\r\n    }\r\n}\r\n\r\nexport default User\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        text: ''\r\n    }\r\n\r\n    static propTypes = {\r\n        searchUser: PropTypes.func.isRequired,\r\n        clearUser: PropTypes.func.isRequired,\r\n        showClear: PropTypes.bool.isRequired,\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ text: e.target.value });\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        if (this.state.text === '') {\r\n            this.props.setAlert(' Please enter something', 'light');\r\n        }\r\n        else {\r\n            this.props.searchUser(this.state.text);\r\n            this.setState({ text: '' });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { showClear, clearUser } = this.props;\r\n        const styleClearBtn = showClear ? { display: 'block' } : { display: 'none' }\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmit} className=\"form\" >\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"text\"\r\n                        placeholder=\"Search users...\"\r\n                        value={this.state.text}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <input type=\"submit\" value=\"Search\" className=\"btn btn-dark btn-block\" />\r\n                </form>\r\n                <button className=\"btn btn-light btn-block\" onClick={clearUser} style={styleClearBtn}>Clear</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\nconst Alert = ({ alertBox }) => {\r\n    return (\r\n        alertBox !== null && (\r\n            <div className={`alert alert-${alertBox.type}`}>\r\n                <i className=\"fas fa-info-circle\"></i>{alertBox.msg}\r\n            </div>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, { Fragment } from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <Fragment>\r\n            <h1>About this app</h1>\r\n            <p>App to search Github Users</p>\r\n            <p>Version 1.0.0</p>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/layout/NavBar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n  state = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false,\n    alert: null\n  }\n\n  searchUser = async text => {\n    this.setState({ loading: true });\n    const res = await axios.get(`http://api.github.com/search/users?q=${text}&${process.env.REACT_APP_GITHUB_TOKEN}`);\n    this.setState({ users: res.data.items, loading: false });\n  };\n\n  getUser = async (username) => {\n    this.setState({ loading: true });\n    const res = await axios.get(`http://api.github.com/users/${username}?${process.env.REACT_APP_GITHUB_TOKEN}`);\n    this.setState({ user: res.data, loading: false });\n  }\n\n  getUserRepos = async (username) => {\n    this.setState({ loading: true });\n    const res = await axios.get(`http://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&${process.env.REACT_APP_GITHUB_TOKEN}`);\n    this.setState({ repos: res.data, loading: false });\n  }\n\n  clearUser = () => this.setState({ users: [], loading: false });\n\n  setAlert = (msg, type) => {\n    this.setState({ alert: { msg, type } });\n\n    setTimeout(() => this.setState({ alert: null }), 5000);\n  }\n\n  render() {\n    const { users, user, repos, loading, alert } = this.state;\n    return (\n      <Router>\n        <div>\n          <NavBar />\n          <div className=\"container\">\n            <Alert alertBox={alert} />\n            <Switch>\n              <Route exact path='/' render={props => (\n                <Fragment>\n                  <Search\n                    searchUser={this.searchUser}\n                    clearUser={this.clearUser}\n                    showClear={users.length > 0 ? true : false}\n                    setAlert={this.setAlert}\n                  />\n                  <Users users={users} loading={loading} />\n                </Fragment>\n              )} />\n              <Route exact path='/about' component={About} />\n              <Route exact path='/user/:login' render={props => (\n                <User\n                  {...props}\n                  getUser={this.getUser}\n                  getUserRepos={this.getUserRepos}\n                  repos={repos}\n                  user={user}\n                  loading={loading}\n                />\n              )} />\n            </Switch>\n\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}