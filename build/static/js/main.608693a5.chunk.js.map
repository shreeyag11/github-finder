{"version":3,"sources":["components/layout/spinner.gif","components/layout/NavBar.js","components/layout/Spinner.js","components/repos/RepoItem.js","components/repos/Repos.js","context/github/GithubState.js","context/github/githubContext.js","components/users/User.js","context/alert/alertContext.js","components/layout/Alert.js","components/pages/About.js","components/users/Search.js","components/users/UserItem.js","components/users/Users.js","components/pages/Home.js","components/pages/NotFound.js","context/github/githubReducer.js","context/types.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["module","exports","NavBar","icon","title","className","to","defaultProps","Spinner","src","spinner","alt","style","display","width","margin","RepoItem","repo","href","html_url","name","propType","PropTypes","object","isRequired","Repos","repos","map","key","id","array","githubClientToken","githubContext","createContext","User","match","useContext","GithubContext","user","getUser","loading","getUserRepos","useEffect","params","login","company","avatar_url","location","bio","blog","followers","following","public_repos","public_gists","hireable","alertContext","Alert","alert","AlertContext","type","msg","About","Search","clearUser","searchUser","users","setAlert","useState","text","setText","styleClearBtn","length","onSubmit","e","preventDefault","placeholder","value","onChange","target","onClick","UserItem","userStyle","gridGap","gridTemplateColumns","Users","Home","NotFound","state","action","payload","process","GITHUB_TOKEN","GithubState","props","useReducer","GithubReducer","dispatch","a","setLoading","axios","get","res","data","items","username","Provider","children","AlertState","AlertReducer","setTimeout","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.608693a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.9d10e74c.gif\";","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = ({ icon, title }) => {\r\n    return (\r\n        <nav className=\"navbar bg-primary\">\r\n            <h1>\r\n                <i className={icon} /> {title}\r\n            </h1>\r\n            <ul>\r\n                <li>\r\n                    <Link to='/'>Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/about'>About</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavBar.defaultProps = {\r\n    title: 'Github Finder',\r\n    icon: 'fab fa-github'\r\n};\r\n\r\nNavBar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    icon: PropTypes.string.isRequired\r\n}\r\n\r\nexport default NavBar\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <Fragment>\r\n            <img src={spinner} alt=\"Loading...\" style={{ display: 'block', width: '50px', margin: 'auto' }} />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst RepoItem = ({ repo }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <h3>\r\n                <a href={repo.html_url}>{repo.name}</a>\r\n            </h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nRepoItem.propType = {\r\n    repo: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default RepoItem;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport RepoItem from './RepoItem';\r\n\r\nconst Repos = ({ repos }) => {\r\n    return repos.map(repo => <RepoItem repo={repo} key={repo.id} />)\r\n};\r\n\r\nRepos.propType = {\r\n    repos: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Repos;\r\n","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport GithubContext from './githubContext';\r\nimport GithubReducer from './githubReducer';\r\nimport {\r\n    SEARCH_USERS,\r\n    SET_LOADING,\r\n    CLEAR_USERS,\r\n    GET_USER,\r\n    GET_REPOS\r\n} from '../types';\r\n\r\nlet githubClientToken;\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n    githubClientToken = process.env.REACT_APP_GITHUB_TOKEN;\r\n}\r\nelse {\r\n    githubClientToken = process.env.GITHUB_TOKEN;\r\n}\r\n\r\nconst GithubState = props => {\r\n    const initialState = {\r\n        users: [],\r\n        user: {},\r\n        repos: [],\r\n        loading: false,\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\r\n\r\n    // Search Users\r\n    const searchUser = async text => {\r\n        setLoading();\r\n        const res = await axios.get(`http://api.github.com/search/users?q=${text}&${githubClientToken}`);\r\n        dispatch({\r\n            type: SEARCH_USERS,\r\n            payload: res.data.items\r\n        });\r\n    };\r\n\r\n    // Get User\r\n    const getUser = async (username) => {\r\n        setLoading();\r\n        const res = await axios.get(`http://api.github.com/users/${username}?${githubClientToken}`);\r\n        dispatch({\r\n            type: GET_USER,\r\n            payload: res.data\r\n        });\r\n    }\r\n\r\n    // Get Repos\r\n    const getUserRepos = async (username) => {\r\n        setLoading();\r\n        const res = await axios.get(`http://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&${githubClientToken}`);\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        });\r\n    }\r\n\r\n    // Clear Users\r\n    const clearUser = () => {\r\n        dispatch({\r\n            type: CLEAR_USERS\r\n        })\r\n    }\r\n\r\n    // Set Loading\r\n    const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n    return (<GithubContext.Provider\r\n        value={{\r\n            users: state.users,\r\n            user: state.user,\r\n            repos: state.repos,\r\n            loading: state.loading,\r\n            searchUser,\r\n            getUser,\r\n            clearUser,\r\n            getUserRepos,\r\n        }}\r\n    >\r\n        {props.children}\r\n    </GithubContext.Provider>\r\n    )\r\n};\r\n\r\nexport default GithubState;","import { createContext } from 'react';\r\n\r\nconst githubContext = createContext();\r\n\r\nexport default githubContext;","import React, { useEffect, Fragment, useContext } from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport Repos from '../repos/Repos';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst User = ({ match }) => {\r\n    const githubContext = useContext(GithubContext);\r\n\r\n    const { user, getUser, loading, getUserRepos, repos } = githubContext;\r\n\r\n    useEffect(() => {\r\n        getUser(match.params.login);\r\n        getUserRepos(match.params.login);\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    const {\r\n        name,\r\n        company,\r\n        avatar_url,\r\n        location,\r\n        bio,\r\n        blog,\r\n        login,\r\n        html_url,\r\n        followers,\r\n        following,\r\n        public_repos,\r\n        public_gists,\r\n        hireable,\r\n    } = user;\r\n\r\n\r\n    if (loading) return <Spinner />\r\n    return <Fragment>\r\n        <Link to='/' className=\"btn btn-light\" >Back to Search</Link>\r\n            Hireable: {' '}\r\n        {hireable ? <i className=\"fas fa-check text-success\" /> : <i className=\"fas fa-times-circle text-danger\" />}\r\n        <div className=\"card grid-2\">\r\n            <div className=\"all-center\">\r\n                <img src={avatar_url} alt=\"\" className='round-img' style={{ width: '150px' }} />\r\n                <h2>{name}</h2>\r\n                <p>Location: {location}</p>\r\n            </div>\r\n            <div>\r\n                {bio && (<Fragment>\r\n                    <h3>Bio</h3>\r\n                    <p>{bio}</p>\r\n                </Fragment>)}\r\n                <a href={html_url} className='btn btn-dark my-1'>\r\n                    Visit Github profile\r\n                    </a>\r\n                <ul>\r\n                    <li>\r\n                        {login && <Fragment>\r\n                            <strong>Username: </strong> {login}\r\n                        </Fragment>}\r\n                    </li>\r\n                    <li>\r\n                        {company && <Fragment>\r\n                            <strong>Company: </strong> {company}\r\n                        </Fragment>}\r\n                    </li>\r\n                    <li>\r\n                        {blog && <Fragment>\r\n                            <strong>Website: </strong> {blog}\r\n                        </Fragment>}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div className=\"card text-center\">\r\n            <div className=\"badge badge-primary\">Followers: {followers}</div>\r\n            <div className=\"badge badge-success\">Following: {following}</div>\r\n            <div className=\"badge badge-light\">Public Repos: {public_repos}</div>\r\n            <div className=\"badge badge-dark\">Public Gists: {public_gists}</div>\r\n        </div>\r\n        <Repos repos={repos} />\r\n    </Fragment>\r\n}\r\n\r\nexport default User\r\n","import { createContext } from 'react';\r\n\r\nconst alertContext = createContext();\r\n\r\nexport default alertContext;","import React, { useContext } from 'react'\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alert = () => {\r\n    const alertContext = useContext(AlertContext);\r\n    const { alert } = alertContext;\r\n    return (\r\n        alert !== null && (\r\n            <div className={`alert alert-${alert.type}`}>\r\n                <i className=\"fas fa-info-circle\"></i>{alert.msg}\r\n            </div>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, { Fragment } from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <Fragment>\r\n            <h1>About this app</h1>\r\n            <p>App to search Github Users</p>\r\n            <p>Version 1.0.0</p>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import React, { useState, useContext } from 'react';\r\nimport GithubContext from '../../context/github/githubContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Search = () => {\r\n    const githubContext = useContext(GithubContext);\r\n    const alertContext = useContext(AlertContext);\r\n\r\n    const { clearUser, searchUser, users } = githubContext;\r\n    const { setAlert } = alertContext;\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    const onChange = (e) => {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (text === '') {\r\n            setAlert(' Please enter something', 'light');\r\n        }\r\n        else {\r\n            searchUser(text);\r\n            setText('');\r\n        }\r\n    }\r\n\r\n    const styleClearBtn = users.length > 0 ? { display: 'block' } : { display: 'none' }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit} className=\"form\" >\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"text\"\r\n                    placeholder=\"Search users...\"\r\n                    value={text}\r\n                    onChange={onChange}\r\n                />\r\n                <input type=\"submit\" value=\"Search\" className=\"btn btn-dark btn-block\" />\r\n            </form>\r\n            <button className=\"btn btn-light btn-block\" onClick={clearUser} style={styleClearBtn}>Clear</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserItem = ({ user: { login, avatar_url } }) => {\r\n\r\n    return (\r\n        <div className=\"card text-center\">\r\n            <img src={avatar_url} alt=\"\" className=\"round-img\" style={{ width: '60px' }} />\r\n            <h3>{login}</h3>\r\n            <div>\r\n                <Link to={`/user/${login}`} className=\"btn btn-dark btn-sm my-1\">\r\n                    More\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserItem\r\n","import React, { useContext } from 'react'\r\nimport UserItem from './UserItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst Users = () => {\r\n    const githubContext = useContext(GithubContext);\r\n\r\n    const { users, loading } = githubContext;\r\n\r\n    if (loading) {\r\n        return <Spinner />\r\n    }\r\n    else {\r\n        return (\r\n            <div style={userStyle}>\r\n                {users.map(user => (\r\n                    <UserItem key={user.id} user={user} />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst userStyle = {\r\n    display: 'grid',\r\n    gridGap: '1rem',\r\n    gridTemplateColumns: 'repeat(3, 1fr)'\r\n}\r\n\r\nexport default Users\r\n","import React, { Fragment } from 'react'\r\nimport Search from '../users/Search';\r\nimport Users from '../users/Users';\r\n\r\nconst Home = () =>\r\n    <Fragment>\r\n        <Search />\r\n        <Users />\r\n    </Fragment>\r\n\r\nexport default Home;","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>Not Found!</h1>\r\n            <p className=\"lead\">The page you're looking for doesn't exist</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import {\r\n    SEARCH_USERS,\r\n    SET_LOADING,\r\n    CLEAR_USERS,\r\n    GET_USER,\r\n    GET_REPOS\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: action.payload,\r\n                loading: false\r\n            }\r\n        case CLEAR_USERS:\r\n            return {\r\n                ...state,\r\n                users: [],\r\n                loading: false\r\n            }\r\n        case GET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loading: false\r\n            }\r\n        case SEARCH_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n","import { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case SET_ALERT:\r\n            return action.payload;\r\n        case REMOVE_ALERT:\r\n            return null;\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useReducer } from 'react';\r\nimport AlertContext from './alertContext';\r\nimport AlertReducer from './alertReducer';\r\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nconst AlertState = props => {\r\n    const initialState = null;\r\n\r\n    const [state, dispatch] = useReducer(AlertReducer, initialState);\r\n\r\n    //Set Alert\r\n    const setAlert = (msg, type) => {\r\n        dispatch({\r\n            type: SET_ALERT,\r\n            payload: { msg, type }\r\n        });\r\n        setTimeout(() => dispatch({ type: REMOVE_ALERT }), 5000);\r\n    }\r\n\r\n    return (<AlertContext.Provider\r\n        value={{\r\n            alert: state,\r\n            setAlert\r\n        }}\r\n    >\r\n        {props.children}\r\n    </AlertContext.Provider>\r\n    )\r\n};\r\n\r\nexport default AlertState;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/layout/NavBar';\nimport User from './components/users/User';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport Home from './components/pages/Home';\nimport NotFound from './components/pages/NotFound';\n\nimport GithubState from './context/github/GithubState';\nimport AlertState from './context/alert/AlertState';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <GithubState>\n      <AlertState>\n        <Router>\n          <div>\n            <NavBar />\n            <div className=\"container\">\n              <Alert />\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/about' component={About} />\n                <Route exact path='/user/:login' component={User} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </AlertState>\n    </GithubState>\n\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}